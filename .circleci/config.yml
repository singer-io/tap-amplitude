version: 2.1

jobs:
  build:
    docker:
      - image: 218546966473.dkr.ecr.us-east-1.amazonaws.com/circle-ci:stitch-tap-tester

    steps:
      - checkout

      - run:
          name: "Setup virtual env and install tap-amplitude"
          command: |
            python3 -m venv /usr/local/share/virtualenvs/tap-amplitude
            source /usr/local/share/virtualenvs/tap-amplitude/bin/activate
            pip install -U "pip==22.2.2" "setuptools==65.3.0"
            pip install -e .[dev]

      - run:
          name: "Run Pylint"
          command: |
            source /usr/local/share/virtualenvs/tap-amplitude/bin/activate
            pip install pylint
            pylint tap_amplitude -d C,R,W || true

      - run:
          name: "Run Unit Tests"
          environment:
            TAP_SNOWFLAKE_USERNAME: dummy_user
            TAP_SNOWFLAKE_PASSWORD: dummy_password
            TAP_SNOWFLAKE_ACCOUNT: dummy_account
            TAP_SNOWFLAKE_DATABASE: dummy_db
            TAP_SNOWFLAKE_WAREHOUSE: dummy_warehouse
          command: |
            source /usr/local/share/virtualenvs/tap-amplitude/bin/activate
            pip install nose coverage
            pip install opentelemetry-api opentelemetry-sdk

            find . -type d -name "__pycache__" -exec rm -r {} +
            find . -name "*.pyc" -delete

            mkdir -p test_output
            nosetests --with-coverage --cover-erase --cover-package=tap_amplitude --cover-html-dir=htmlcov tests | tee test_output/report.xml
            coverage html

      - store_test_results:
          path: test_output

      - store_artifacts:
          path: htmlcov

workflows:
  version: 2

  commit:
    jobs:
      - build:
          context: circleci-user

  build_daily:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - build:
          context: circleci-user
